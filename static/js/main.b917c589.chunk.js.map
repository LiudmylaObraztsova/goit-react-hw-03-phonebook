{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleInputOnChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","id","uuidv4","reset","this","className","style","formGroup","type","pattern","title","required","onChange","Button","variant","startIcon","Component","useStyles","makeStyles","root","background","border","borderRadius","color","padding","margin","cursor","ContactItem","onClick","classes","ContactList","contacts","onDeleteContact","map","listItem","Filter","App","filter","contactId","formSubmitHandler","newContact","contact","toLowerCase","includes","toast","warn","addContact","success","prevState","seachContactByName","contactName","getVisibleContacts","normalizedFilter","console","log","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","visibleContacts","position","autoClose","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b917c589.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formGroup\":\"ContactForm_formGroup__3AOQi\",\"form-group\":\"ContactForm_form-group__1WNXQ\",\"button\":\"ContactForm_button__3Pjw7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactList_button__11-6o\",\"listItem\":\"ContactList_listItem__3nS-s\"};","import React, { Component } from 'react';\r\n//add\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport style from './ContactForm.module.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleInputOnChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    this.props.onSubmit({\r\n      id: uuidv4(),\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n    });\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <div className={style.formGroup}>\r\n          <label>\r\n            Name{' '}\r\n            <input\r\n              id={uuidv4()}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required={true}\r\n              onChange={this.handleInputOnChange}\r\n            />\r\n          </label>\r\n\r\n          <label>\r\n            Number{' '}\r\n            <input\r\n              id={uuidv4()}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              value={number}\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required={true}\r\n              onChange={this.handleInputOnChange}\r\n            />\r\n          </label>\r\n        </div>\r\n\r\n        <Button type=\"submit\" variant=\"contained\" startIcon={<AddIcon />}>\r\n          Add contact\r\n        </Button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    background: 'grey',\r\n    border: 0,\r\n    borderRadius: 3,\r\n    color: 'black',\r\n    padding: '2px 5px',\r\n    margin: '5px 15px',\r\n    cursor: 'pointer',\r\n  },\r\n});\r\n\r\nconst ContactItem = ({ name, number, onClick }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      {name}: {number}\r\n      <Button\r\n        type=\"button\"\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        className={classes.root}\r\n        startIcon={<DeleteIcon />}\r\n        onClick={onClick}\r\n      >\r\n        Delete\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nContactItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactItem;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport style from './ContactList.module.css';\r\nimport ContactItem from './ContactItem';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n  <ol>\r\n    {contacts.map(({ name, number, id }) => (\r\n      <li key={id} className={style.listItem}>\r\n        <ContactItem\r\n          name={name}\r\n          number={number}\r\n          onClick={() => onDeleteContact(id)}\r\n        />\r\n      </li>\r\n    ))}\r\n  </ol>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.shape.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default ContactList;","import React from 'react';\r\nimport './Filter.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <label>\r\n      {' '}\r\n      Find contacts by name\r\n      <input type=\"text\" value={value} onChange={onChange} />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport './App.css';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\n//\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n//\n  contactId = uuidv4();\n\n  formSubmitHandler = newContact => {\n    const similarName = this.state.contacts\n      .map(contact => contact.name.toLowerCase())\n      .includes(newContact.name.toLowerCase());\n\n    const notifyWarn = () =>\n      toast.warn(`${newContact.name} is already in phonebook !`);\n\n    const notifySuccess = () =>\n      toast.success(`${newContact.name} is added in phonebook !`);\n\n    if (similarName) {\n      notifyWarn();\n    } else {\n      const addContact = {\n        id: this.contactId,\n        ...newContact,\n      };\n      notifySuccess();\n\n      this.setState(({ contacts }) => ({\n        contacts: [...contacts, addContact],\n      }));\n    }\n  };\n\n  onDeleteContact = contactId => {\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n      };\n    });\n  };\n\n  seachContactByName = contactName => {\n    this.setState({ filter: contactName.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  componentDidMount() {\n    console.log('App componentDidMount');\n\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n\n    console.log(parsedContacts);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log('App componentDidUpdate');\n\n    if (this.state.contacts !== prevState.contacts) {\n      console.log('Update');\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    console.log('App render');\n\n    const { filter } = this.state;\n\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div className=\"Container\">\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.formSubmitHandler} />\n\n        <Filter value={filter} onChange={this.seachContactByName} />\n\n        <h2>Contacts</h2>\n        <ContactList\n          contacts={visibleContacts}\n          onDeleteContact={this.onDeleteContact}\n        />\n        <ToastContainer\n          position=\"top-center\"\n          autoClose={2000}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss={false}\n          draggable={false}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}